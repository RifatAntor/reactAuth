{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedDuration","remainingDuration","removeItem","duration","retriveToken","useState","setToken","userLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","remainingTime","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","passInputRef","useRef","history","useHistory","form","onSubmit","enteredPass","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replaceState","control","htmlFor","type","id","ref","action","UserProfile","profile","AuthForm","emailInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","event","preventDefault","url","enteredEmail","email","ok","json","data","errorMessage","error","message","Error","expiresIn","toISOString","replace","catch","err","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f9f0698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2bI8V\",\"control\":\"ProfileForm_control__2txl8\",\"action\":\"ProfileForm_action__3Kps0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3O74Z\",\"logo\":\"MainNavigation_logo__2gKID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3Gzag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3PGsU\"};","import React, { createContext, useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjexpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjexpirationTime - currentTime;\r\n  return remainingDuration;\r\n\r\n}\r\n\r\nconst retriveToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedDuration = localStorage.getItem('expirationTime');\r\n\r\n  const remainingDuration = calculateRemainingTime(storedDuration);\r\n\r\n  if(remainingDuration < 60000){\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingDuration\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retriveToken();\r\n  let initialToken;\r\n  if(tokenData){\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userLoggedIn = !!token;\r\n  \r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    if(logoutTimer){\r\n    clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n  \r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token',token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n    const remainingTime = calculateRemainingTime (expirationTime);\r\n\r\n    logoutTimer = setTimeout (logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(tokenData){\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n\r\n  },[tokenData, logoutHandler])\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const logoutHandler = () => {\n    authCtx.logout();\n  }\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useContext, useRef } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./ProfileForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProfileForm = () => {\n  const passInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const formSubmitHandler = () => {\n    const enteredPass = passInputRef.current.value;\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAFAyJdm0Qc89CT65x6URTuErzIlhJjed0\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredPass,\n          returnSecureToken: false,\n        }),\n        headers: {\n          'Content-Type': 'application/json' \n        }\n      }\n    ).then(res => {\n      //...\n      history.replaceState('/');\n    }) ;\n  };\n  return (\n    <form className={classes.form} onSubmit={formSubmitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input type=\"password\" id=\"new-password\" ref={passInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useContext, useRef, useState } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passInputRef = useRef();\n  const history = useHistory();\n\n  const authCtx = useContext(AuthContext)\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPass = passInputRef.current.value;\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAFAyJdm0Qc89CT65x6URTuErzIlhJjed0\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAFAyJdm0Qc89CT65x6URTuErzIlhJjed0\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPass,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          console.log(\"successful\");\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message)\n              errorMessage = data.error.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000))\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => alert(err.message));\n\n    console.log(enteredEmail, enteredPass);\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={formSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3LlQv\",\"control\":\"AuthForm_control__1ph4G\",\"actions\":\"AuthForm_actions__3u4pF\",\"toggle\":\"AuthForm_toggle__107TS\"};"],"sourceRoot":""}